<Application x:Class="Comlink.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemeResources />
                <ui:XamlControlsResources />
            </ResourceDictionary.MergedDictionaries>

            <!-- Override theme styles -->
            <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundBrush" Color="Transparent" />
            <SolidColorBrush x:Key="DataGridColumnHeaderForegroundBrush" Color="{StaticResource SystemBaseHighColor}" />

            <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="MenuItem">
                <Grid
                    x:Name="ContentRoot"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}" />

                    <ContentPresenter
                        ContentSource="Header"
                        RecognizesAccessKey="True"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="12,0,12,0"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                    <ui:MenuPopup
                        x:Name="PART_Popup"
                        AllowsTransparency="true"
                        Focusable="false"
                        IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                        Placement="Bottom">
                        <Border
                            x:Name="SubMenuRoot"
                            Background="{DynamicResource MenuFlyoutPresenterBackground}">
                            <Grid>
                                <ScrollViewer
                                    x:Name="SubMenuScrollViewer"
                                    Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                    Margin="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                    MinWidth="{DynamicResource FlyoutThemeMinWidth}">
                                    <ItemsPresenter
                                        RenderOptions.ClearTypeHint="Enabled"
                                        Margin="0"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        Grid.IsSharedSizeScope="true"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                                <Border
                                    x:Name="SubMenuBorder"
                                    BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                                    BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}" />
                            </Grid>
                        </Border>
                    </ui:MenuPopup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger SourceName="PART_Popup" Property="IsSuspendingAnimation" Value="true">
                        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPointerOver}" />
                        <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
                    </Trigger>
                    <!-- Selected -->
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
                        <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushSelected}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
                        <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="Menu" BasedOn="{StaticResource DefaultMenuStyle}">
                <Setter Property="Height" Value="24" />
            </Style>

            <Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}">
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Height" Value="24" />
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Height" Value="24" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Converters -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        </ResourceDictionary>
    </Application.Resources>
</Application>